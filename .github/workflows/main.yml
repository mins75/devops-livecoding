name: CI devops 2023
on:
  push:
    branches: main
  pull_request:

jobs:
  test-backend: 
    runs-on: ubuntu-22.04
    steps:
     #checkout your github code using actions/checkout@v2.5.0
      - uses: actions/checkout@v2.5.0

     #do the same with another action (actions/setup-java@v3) that enable to setup jdk 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      
          
      - name: Build and analyze
        env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=mins75_devops-livecoding --file ./simple-api/pom.xml

     #finally build your app with the latest command
     # - name: Build and test with Maven
     #   run: | #TODO
     #     mvn -B verify sonar:sonar -Dsonar.projectKey=mins75_devops-livecoding -Dsonar.organization=mins75 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file ./simple-api/pom.xml
#mvn clean -file "simple-api/pom.xml" 
#mvn test -file "simple-api/pom.xml" 
# define job to build and publish docker image
  build-and-push-docker-image:
   needs: test-backend
   # run only when code is compiling and tests are passing
   runs-on: ubuntu-22.04
  
   # steps to perform in job
   steps:
     - name: Checkout code
       uses: actions/checkout@v2.5.0

     - name: Log in to Docker Hub
       uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
       with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}

     - name: Build Docker image and push backend
       run: |
        docker build ./simple-api --file ./simple-api/Dockerfile --tag myns75/tp-devops-simple-api:latest
        docker push myns75/tp-devops-simple-api:latest
    # - name: Build image and push backend
    #   uses: docker/build-push-action@v3
    #   with:
    #     # relative path to the place where source code with Dockerfile is located
    #     context: ./simple-api
    #     # Note: tags has to be all lower-case
    #     tags:  
    #     push: ${{ github.ref == 'refs/heads/main' }}
  
     - name: Build image and push database
         # DO the same for database
       run: |
        docker build ./simple-api --file ./simple-api/Dockerfile --tag myns75/tp-devops-simple-api:latest
        docker push myns75/tp-devops-simple-api:latest
  
     - name: Build image and push httpd
       # DO the same for httpd
       run: |
        docker build ./simple-api --file ./simple-api/Dockerfile --tag myns75/tp-devops-simple-api:latest
        docker push myns75/tp-devops-simple-api:latest
  
  
